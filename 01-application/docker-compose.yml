version: "3.5"
services:
  application_1:
    build:
      context: ./example-app
      dockerfile: ./Dockerfile
    environment:
      - INSTANCE_ID=application_1
      - PORT=40001
      - NEXT_SERVER_1_ID=application_2
      - NEXT_SERVER_2_ID=application_3
      - NEXT_SERVER_1=http://application_2:40002
      - NEXT_SERVER_2=http://application_3:40003
      - ZIPKIN_HOST=tracing
      - ZIPKIN_PORT=9411
      - FLUENTD_HOST=collator
      - FLUENTD_PORT=24224
    healthcheck:
      test: [ "CMD-SHELL", "curl", "-f", "http://localhost:40001/healthz" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ## for debugging/development:
    volumes:
      - "./example-app/src:/app/src:Z"
      - "./example-app/package.json:/app/package.json:Z"
      - "./example-app/package-lock.json:/app/package-lock.json:Z"
    ports:
      - "40001:40001"
  application_2:
    build:
      context: ./example-app
      dockerfile: ./Dockerfile
    environment:
      - INSTANCE_ID=application_2
      - PORT=40002
      - NEXT_SERVER_1_ID=application_1
      - NEXT_SERVER_2_ID=application_3
      - NEXT_SERVER_1=http://application_1:40001
      - NEXT_SERVER_2=http://application_3:40003
      - ZIPKIN_HOST=tracing
      - ZIPKIN_PORT=9411
      - FLUENTD_HOST=collator
      - FLUENTD_PORT=24224
    healthcheck:
      test: [ "CMD-SHELL", "curl", "-f", "http://localhost:40002/healthz" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ## for debugging/development:
    volumes:
      - "./example-app/src:/app/src:Z"
    ports:
      - "40002:40002"
  application_3:
    build:
      context: ./example-app
      dockerfile: ./Dockerfile
    environment:
      - INSTANCE_ID=application_3
      - PORT=40003
      - NEXT_SERVER_1_ID=application_2
      - NEXT_SERVER_2_ID=application_1
      - NEXT_SERVER_1=http://application_2:40002
      - NEXT_SERVER_2=http://application_1:40001
      - ZIPKIN_HOST=tracing
      - ZIPKIN_PORT=9411
      - FLUENTD_HOST=collator
      - FLUENTD_PORT=24224
    healthcheck:
      test: [ "CMD-SHELL", "curl", "-f", "http://localhost:40003/healthz" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ## for debugging/development:
    volumes:
      - "./example-app/src:/app/src:Z"
    ports:
      - "40003:40003"
  alerts:
    logging:
      driver: none
    image: prom/alertmanager:v0.15.1
    entrypoint: [
      "alertmanager",
      "--config.file=/etc/alertmanager/config.yml",
      "--storage.path=/alertmanager"
    ]
    ports:
      - "49093:9093"
    volumes:
      - "./data/alertmanager:/alertmanager:Z"
      - "./data/alertmanager.d/config.yml:/etc/alertmanager/config.yml:Z"
  collator:
    build:
      context: ./data/fluentd.d
      dockerfile: ./Dockerfile
    entrypoint: ["fluentd", "-c", "/etc/fluent/fluent.conf"]
    ports:
      - "44231:24231"
      - "44224:24224"
      - "44224:24224/udp"
    volumes:
      - "./data/fluentd.d/fluent.conf:/etc/fluent/fluent.conf"
  dashboard:
    logging:
      driver: none
    image: grafana/grafana:5.2.1
    ports:
      - "43000:3000"
    user: "1000"
    volumes:
      - "./data/grafana:/var/lib/grafana"
      - "./data/grafana.d/conf/grafana.ini:/etc/grafana/grafana.ini"
      - "./data/grafana.d/provisioning:/etc/grafana/provisioning"
  logs_db:
    logging:
      driver: none
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    volumes:
      - "./data/elasticsearch:/usr/share/elasticsearch/data"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "49200:9200"
      - "49300:9300"
  logs_db_exporter:
    logging:
      driver: none
    image: justwatch/elasticsearch_exporter:1.0.2
    command:
     - '-es.uri=http://logs_db:9200'
    restart: always
    ports:
    - "49108:9108"
  logs_view:
    logging:
      driver: none
    image: docker.elastic.co/kibana/kibana:6.3.1
    ports:
      - "45601:5601"
    volumes:
      - "./data/kibana.d/kibana.yml:/usr/share/kibana/config/kibana.yml"
    depends_on:
      - "logs_db"
  metrics:
    image: prom/prometheus:v2.3.2
    ports:
      - "49090:9090"
    volumes:
      - "./data/prometheus:/prometheus:Z"
      - "./data/prometheus.d/prometheus.yml:/etc/prometheus/prometheus.yml:Z"
      - "./data/prometheus.d/alert.rules.yml:/etc/prometheus/alert.rules.yml:Z"
  notifier:
    logging:
      driver: none
    build:
      context: ./notifier
      dockerfile: ./Dockerfile
    entrypoint: [ "npm", "start" ]
    ports:
      - "59093:59093"
    volumes:
      - "./notifier:/app"
  tracing:
    logging:
      driver: none
    image: openzipkin/zipkin:2.10.2
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=logs_db
    ports:
      - "49411:9411"